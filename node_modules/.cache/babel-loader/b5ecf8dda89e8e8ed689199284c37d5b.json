{"ast":null,"code":"import _objectSpread from\"/home/rupali/projects/Front-End-Web-Development-with-React/React/confusion/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import*as ActionTypes from'./ActionTypes';export var Comments=function Comments(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{errMess:null,comments:[]};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ActionTypes.ADD_COMMENTS:return _objectSpread(_objectSpread({},state),{},{errMess:null,comments:action.payload});case ActionTypes.COMMENTS_FAILED:return _objectSpread(_objectSpread({},state),{},{errMess:action.payload});case ActionTypes.ADD_COMMENT:var comment=action.payload;/*comment.id = state.comments.length;\n              comment.date = new Date().toISOString();*/return _objectSpread(_objectSpread({},state),{},{comments:state.comments.concat(comment)});default:return state;}};","map":{"version":3,"sources":["/home/rupali/projects/Front-End-Web-Development-with-React/React/confusion/src/redux/comments.js"],"names":["ActionTypes","Comments","state","errMess","comments","action","type","ADD_COMMENTS","payload","COMMENTS_FAILED","ADD_COMMENT","comment","concat"],"mappings":"4JACA,MAAO,GAAKA,CAAAA,WAAZ,KAA6B,eAA7B,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAGF,IAHGC,CAAAA,KAGH,2DAHW,CACzBC,OAAO,CAAG,IADe,CAEzBC,QAAQ,CAAG,EAFc,CAGX,IAAXC,CAAAA,MAAW,2CAClB,OAAQA,MAAM,CAACC,IAAf,EACI,IAAKN,CAAAA,WAAW,CAACO,YAAjB,CACI,sCAAWL,KAAX,MAAkBC,OAAO,CAAE,IAA3B,CAAiCC,QAAQ,CAAEC,MAAM,CAACG,OAAlD,GAEF,IAAKR,CAAAA,WAAW,CAACS,eAAjB,CACE,sCAAWP,KAAX,MAAkBC,OAAO,CAAEE,MAAM,CAACG,OAAlC,GAEF,IAAKR,CAAAA,WAAW,CAACU,WAAjB,CACI,GAAIC,CAAAA,OAAO,CAAGN,MAAM,CAACG,OAArB,CACA;wDAEA,sCAAYN,KAAZ,MAAmBE,QAAQ,CAAEF,KAAK,CAACE,QAAN,CAAeQ,MAAf,CAAsBD,OAAtB,CAA7B,GAEJ,QACE,MAAOT,CAAAA,KAAP,CAdR,CAgBD,CApBI","sourcesContent":["\nimport * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = {\n        errMess : null,\n        comments : []\n        }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, errMess: null, comments: action.payload};\n      \n          case ActionTypes.COMMENTS_FAILED:\n            return {...state, errMess: action.payload};\n      \n          case ActionTypes.ADD_COMMENT:\n              var comment = action.payload;\n              /*comment.id = state.comments.length;\n              comment.date = new Date().toISOString();*/\n              return { ...state, comments: state.comments.concat(comment)};\n      \n          default:\n            return state;\n    }\n  };"]},"metadata":{},"sourceType":"module"}